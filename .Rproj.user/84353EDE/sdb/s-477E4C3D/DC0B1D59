{
    "contents" : "# quiz 2\n\n# Q1\n\nlibrary(AppliedPredictiveModeling)\nlibrary(caret)\ndata(AlzheimerDisease)\n\nadData = data.frame(diagnosis,predictors)\ntrainIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)\ntraining = adData[trainIndex,]\ntesting = adData[-trainIndex,]\n\n# Q2\n\nlibrary(AppliedPredictiveModeling)\ndata(concrete)\nlibrary(caret)\n\n\nset.seed(1000)\ninTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]\ntraining = mixtures[ inTrain,]\ntesting = mixtures[-inTrain,]\n\nhist(training$Superplasticizer)\n\ntable(training$Superplasticizer == 0)\n\n# Q3\n\nlibrary(caret)\nlibrary(AppliedPredictiveModeling)\nset.seed(3433)\n\ndata(AlzheimerDisease)\n\nadData = data.frame(diagnosis,predictors)\ninTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]\ntraining = adData[ inTrain,]\ntesting = adData[-inTrain,]\n\nsr <- training[,grep('^IL', x = names(training) )]\n\npreProc <- preProcess(sr, method='pca', thresh=0.8, outcome=training$diagnosis)\n\npreProc$rotation # There is only \n\n# Q4\n\nlibrary(caret)\nlibrary(AppliedPredictiveModeling)\nset.seed(3433)\ndata(AlzheimerDisease)\nadData = data.frame(diagnosis,predictors)\n\n\ninTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]\ntraining = adData[ inTrain,]\ntesting = adData[-inTrain,]\n\nset.seed(3433)\nIL <- grep(\"^IL\", colnames(training), value=TRUE)\nILpredictors <- predictors[, IL]\n\ndf <- data.frame(diagnosis, ILpredictors)\ninTrain <- createDataPartition(df$diagnosis, p=3/4)[[1]]\ntraining <- df[inTrain, ]\ntesting <- df[-inTrain, ]\n\nmodelFit <- train(diagnosis ~ ., method=\"glm\", data=training)\npredictions <- predict(modelFit, newdata=testing)\nC1 <- confusionMatrix(predictions, testing$diagnosis)\nprint(C1)\nacc1 <- C1$overall[1]\nacc1 # Non-PCA Accuracy: 0.65 \n\nmodelFit <- train(training$diagnosis ~ ., \n                  method=\"glm\", \n                  preProcess=\"pca\", \n                  data=training, \n                  trControl=trainControl(preProcOptions=list(thresh=0.8)))\nC2 <- confusionMatrix(testing$diagnosis, predict(modelFit, testing))\nprint(C2)\nacc2 <- C2$overall[1]\nacc2 # PCA Accuracy: 0.72\n\n",
    "created" : 1442156179321.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1496858298",
    "id" : "DC0B1D59",
    "lastKnownWriteTime" : 1442182378,
    "path" : "~/MOOC/Practical Machine Learning/Assignment | Git/quiz2.R",
    "project_path" : "quiz2.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}